<resources>
    <string name="app_name">demo</string>
    <string name="message_shortcut_short_label">Open Messages</string>
    <string name="message_shortcut_long_label">See your all messages in one click</string>
    <string name="message_disabled_message">Messages are disabled for now</string>
    <string name="message_activity">Message Activity</string>
    <string name="update_dynamic_shortcuts">Update Dynamic Shortcuts</string>
    <string name="add_dynamic_shortcuts">Add Dynamic Shortcuts</string>
    <string name="delete_dynamic_shortcuts">Delete Dynamic Shortcuts</string>
    <string name="add_pinned_shortcuts">Add Pinned Shortcuts</string>
    <string name="dynamic_shortcut">Dynamic Shortcut</string>
    <string name="pinned_shortcut">Pinned Shortcut</string>
    <string name="demo"><![CDATA[Before getting into alert dialog, we should know about what is alert dialog, Alert dialog is just like a pop-up where user can choose action by clicking \"ok\" or \"cancel\" button.  Methods in Alert Dialog setView(View view) − It used to set custom view to alert dialog  setTitle(CharSequence title) − It is used to set title to alert dialog  setMessage(CharSequence message) − It is simple call as content in alert box  setIcon(int resId) − it is used to set icon for alert box  setButton(int whichButton, CharSequence text, Message msg) − It is used to set button for alert dialog as shown below example.  getListView() − it is used to get a list view which is used inside alert dialog.  This example demonstrate about how to implement android alert dialog.  Step 1 − Create a new project in Android Studio, go to File ⇒ New Project and fill all required details to create a new project.  Step 2 − Add the following code to res/layout/activity_main.xml.  <?xml version = \"1.0\" encoding = \"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android = \"http://schemas.android.com/apk/res/android\"    xmlns:app = \"http://schemas.android.com/apk/res-auto\"    xmlns:tools = \"http://schemas.android.com/tools\"    android:layout_width = \"match_parent\"    android:layout_height = \"match_parent\"    tools:context = \".MainActivity\">    <Button       android:id = \"@+id/button\"       android:layout_width = \"wrap_content\"       android:layout_height = \"wrap_content\"       android:text = \"Click\"       app:layout_constraintBottom_toBottomOf = \"parent\"       app:layout_constraintLeft_toLeftOf = \"parent\"       app:layout_constraintRight_toRightOf = \"parent\"       app:layout_constraintTop_toTopOf = \"parent\" /> </android.support.constraint.ConstraintLayout> Step 3 − Add the following code to src/MainActivity.java  package com.example.andy.myapplication; import android.content.DialogInterface; import android.support.v7.app.AlertDialog; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.view.View; import android.widget.Button; import android.widget.Switch; import android.widget.Toast; public class MainActivity extends AppCompatActivity implements View.OnClickListener {    @Override    protected void onCreate(Bundle savedInstanceState) {       super.onCreate(savedInstanceState);       setContentView(R.layout.activity_main);       Button button=findViewById(R.id.button);       button.setOnClickListener(this);    }    @Override    public void onClick(View v) {       switch (v.getId()){          case R.id.button:          alertDialog();          break;       }    }    private void alertDialog() {       AlertDialog.Builder dialog=new AlertDialog.Builder(this);       dialog.setMessage(\"Please Select any option\");       dialog.setTitle(\"Dialog Box\");       dialog.setPositiveButton(\"YES\",       new DialogInterface.OnClickListener() {          public void onClick(DialogInterface dialog,          int which) {             Toast.makeText(getApplicationContext(),\"Yes is clicked\",Toast.LENGTH_LONG).show();          }       });       dialog.setNegativeButton(\"cancel\",new DialogInterface.OnClickListener() {          @Override          public void onClick(DialogInterface dialog, int which) {             Toast.makeText(getApplicationContext(),\"cancel is clicked\",Toast.LENGTH_LONG).show();          }       });       AlertDialog alertDialog=dialog.create();       alertDialog.show();    } } In the above code we have created a button when user click on button it will show an alert dialog box, user can select ok or cancel based on requirement.  Let\'s try to run your application. I assume you have connected your actual Android Mobile device with your computer. To run the app from android studio, open one of your project\'s activity files and click Run Play Icon  icon from the toolbar. Select your mobile device as an option and then check your mobile device which will display your default screen]]></string>
</resources>
